# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist = True
skip_missing_interpreters = True

[testenv]
setenv =
    PYTHONPATH={toxinidir}
    PYTHONBREAKPOINT=ipdb.set_trace
    CHARM_REPO=https://github.com/canonical/notebook-operators.git
    CHARM_BRANCH=main
    LOCAL_CHARM_DIR=charm_repo


[testenv:integration]
passenv = *
allowlist_externals =
    bash
    git
    rm
    tox
    rockcraft
deps =
    juju<4.0
    pytest
    pytest-operator
    ops
commands =
    # build and pack rock
    rockcraft pack
    # clone related charm
    rm -rf {env:LOCAL_CHARM_DIR}
    git clone --branch {env:CHARM_BRANCH} {env:CHARM_REPO} {env:LOCAL_CHARM_DIR}
    # upload rock to docker and microk8s cache, replace charm's container with local rock reference
    bash -c 'NAME=$(yq eval .name rockcraft.yaml) && \
             VERSION=$(yq eval .version rockcraft.yaml) && \
             ARCH=$(yq eval -r ".platforms | keys" rockcraft.yaml | cut -d" " -f2) && \
             ROCK="$\{NAME\}_$\{VERSION\}_$\{ARCH\}" && \
             sudo skopeo --insecure-policy copy oci-archive:$ROCK.rock docker-daemon:$ROCK:$VERSION && \
             docker save $ROCK > $ROCK.tar && \
             microk8s ctr image import $ROCK.tar && \
             yq e -i ".resources.oci-image.upstream-source=\"$ROCK:$VERSION\"" {env:LOCAL_CHARM_DIR}/charms/jupyter-ui/metadata.yaml'
    # run charm integration test with rock
    tox -c {env:LOCAL_CHARM_DIR} -e ui-integration