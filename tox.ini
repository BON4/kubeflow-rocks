[tox]
skipsdist = True
envlist = rocks-{setup,forcepatch,patch,build,scan,publish}

# rocks maintenance: rocks patch, build, scan, and publish
[setup-rocks]
allowlist_externals = bash
passenv =
  HOME
  USER
commands =
  # in image-definitions/ install tools and setup sources
  # install tools and setup sources
  bash -c 'cd ./image-definitions && ./install-tools.sh && ./setup.sh .'
description = Install tools, setup upstream sources

[patch-rocks]
allowlist_externals = bash
passenv =
  HOME
  USER
commands =
  # check if ./kubeflow was updated since last commit
  # if update is detected, exit with error
  bash -c './tools/check-update.sh'
  # apply patch for kubeflow/
  bash -c './tools/apply-patches.sh'
description = Check for updates in sources and exit if commit difference is detected, apply patch

[forcepatch-rocks]
allowlist_externals = bash
passenv =
  HOME
  USER
commands =
  # check if ./kubeflow was updated since last commit
  # ignore commit differences, if detected
  bash -c './tools/check-update.sh || true'
  # apply patch for kubeflow/
  bash -c './tools/apply-patches.sh'
description = Check for updates in sources and produce log message if commit difference is detected, apply patch

[build-scan-rocks]
allowlist_externals = bash
commands = bash -c './tools/build-scan.sh'
description = Scan rocks

[publish-rocks]
allowlist_externals = bash
commands = bash -c './tools/publish.sh'
description = Publish rocks
